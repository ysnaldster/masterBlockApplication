{"version":3,"sources":["types/types.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebase-config.js","actions/uiError.js","actions/auth.js","hooks/useForm.js","containers/Login.jsx","containers/Registro.jsx","containers/Perfil.jsx","components/Header.jsx","containers/Home.jsx","routers/PrivateRoute.js","routers/PublicRoute.js","routers/AuthRouter.js","App.js","index.js"],"names":["types","login","logout","uiSetError","uiRemoveError","uiStartLoading","uiFinishLoading","inicialState","loading","msjError","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","email","image","error","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","googleAuthProvider","GoogleAuthProvider","facebookAuthProvider","FacebookAuthProvider","setError","err","finishLoading","startLoginEmailPassword","password","dispatch","signInWithEmailAndPassword","then","user","photoURL","uiStarLoading","catch","e","console","log","useForm","initialState","useState","values","setValues","reset","newFormState","handleInputChange","target","value","StyledMainContainer","styled","div","StyledFormContainer","form","StyledImgContainer","img","StyledSecondContainer","StyledMainTitle","p","StyledButtonMainContainer","StyledButtons","InputGroup","Login","button","useDispatch","formValues","useSelector","ui","showPassword","setShowPassword","src","width","onSubmit","preventDefault","spacing","style","color","pointerEvents","children","placeholder","onChange","h","size","onClick","signInWithPopup","a","marginLeft","textAlign","fontWeight","margin","to","textDecoration","Registro","formValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","startRegisterWithEmailPasswordName","status","mt","Perfil","StyledNavbarContainer","Row","StyledColContainer","Col","StyledInputSearch","input","Header","isLoogedIn","setsIsLoogedIn","useEffect","onAuthStateChanged","Container","fluid","xs","height","signOut","Home","PrivateRoute","isAuthenticated","Component","component","rest","props","PublicRoute","AuthRouter","exact","path","App","setChecking","isLoggedIn","setIsLoggedIn","ReactDOM","render","document","getElementById"],"mappings":"uIAAaA,EAAQ,CACjBC,MAAO,QACPC,OAAQ,SAERC,WAAY,aACZC,cAAe,eAIfC,eAAgB,mBAChBC,gBAAiB,qB,QCRfC,EAAe,CACjBC,SAAS,EACTC,SAAU,M,SCGRC,EAAWC,YAAgB,CAC7BC,KCJuB,WAAyB,IAAxBC,EAAuB,uDAAf,GAAIC,EAAW,uCAC/C,OAAQA,EAAOC,MACX,KAAKf,EAAMC,MACP,MAAO,CACHe,IAAKF,EAAOG,QAAQD,IACpBE,KAAMJ,EAAOG,QAAQE,YACrBC,MAAON,EAAOG,QAAQG,MACtBC,MAAOP,EAAOG,QAAQI,OAE9B,KAAKrB,EAAME,OACP,MAAO,GAeX,QACA,OAAOW,IDrBXS,MDFoB,WAAmC,IAAlCT,EAAiC,uDAAzBN,EAAcO,EAAW,uCACtD,OAAQA,EAAOC,MACX,KAAKf,EAAMG,WACP,OAAO,2BACAU,GADP,IAEIJ,SAAUK,EAAOG,UAEzB,KAAKjB,EAAMI,cACP,OAAO,2BACAS,GADP,IAEIJ,SAAU,OAElB,KAAKT,EAAMK,eACP,OAAO,2BACAQ,GADP,IAEIL,SAAS,IAEjB,KAAKR,EAAMM,gBACP,OAAO,2BACAO,GADP,IAEIL,SAAS,IAEjB,QACI,OAAOK,MClBbU,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAG9FC,EAAQC,YACjBlB,EACAa,EAAiBM,YAAgBC,O,uGEJnCC,IAASC,cATY,CACnBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,cACnBC,MAAO,6CAKEP,IAASQ,YAApB,I,oCAEMC,EAAqB,IAAIT,IAASnB,KAAK6B,mBACvCC,EAAuB,IAAIX,IAASnB,KAAK+B,qBChBpCC,EAAW,SAACC,GACrB,MAAM,CACF9B,KAAMf,EAAMG,WACZc,QAAS4B,IAcJC,EAAgB,iBAAO,CAChC/B,KAAMf,EAAMM,kBChBHyC,EAA0B,SAAC3B,EAAO4B,GAC3C,OAAO,SAACC,GACJlB,IAASnB,OAAOsC,2BAA2B9B,EAAO4B,GAC7CG,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACLH,EAAShD,EAAMmD,EAAKpC,IAAKoC,EAAKjC,YAAaiC,EAAKhC,MAAOgC,EAAKC,WAC5DJ,EAASH,KACTG,EDKkB,CAC9BlC,KAAMf,EAAMsD,mBCJHC,OAAM,SAAAC,GACHP,EAASH,KACTW,QAAQC,IAAIF,QAsDfvD,EAAQ,SAACe,EAAKG,EAAaC,EAAOC,GAC3C,MAAO,CACHN,KAAMf,EAAMC,MACZgB,QAAS,CACLD,MACAG,cACAC,QACAC,WAYCnB,EAAS,iBAAO,CACzBa,KAAMf,EAAME,S,iGCrFHyD,GAAU,WAA0B,IAAxBC,EAAuB,uDAAR,GAEpC,EAA4BC,mBAASD,GAArC,mBAAOE,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WAAoC,IAAlCC,EAAiC,uDAAlBL,EAC3BG,EAAWE,IAITC,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEzBJ,EAAU,2BACHD,GADE,mBAEHK,EAAOjD,KAAQiD,EAAOC,UAKhC,MAAO,CAAEN,EAAQI,EAAmBF,I,oCCPlCK,GAAsBC,KAAOC,IAAV,6RAWnBC,GAAsBF,KAAOG,KAAV,+DAInBC,GAAqBJ,KAAOK,IAAV,gFAKlBC,GAAwBN,KAAOC,IAAV,0OAWrBM,GAAkBP,KAAOQ,EAAV,8IAQfC,GAA4BT,KAAOC,IAAV,wLAUzBS,GAAgBV,aAAOW,IAAPX,CAAH,mKAsGJY,IA/FWZ,KAAOa,OAAV,4EAMT,WAEV,IAAMlC,EAAWmC,cACjB,EAAwCzB,GAAQ,CAC5CvC,MAAO,GACP4B,SAAU,KAFd,mBAAOqC,EAAP,KAAmBnB,EAAnB,KAIQ9C,EAAoBiE,EAApBjE,MAAO4B,EAAaqC,EAAbrC,SAkBf,GAfgBsC,aAAY,SAAAzE,GAAK,OAAIA,EAAM0E,MAeH1B,oBAAS,IAAjD,mBAAO2B,EAAP,KAAqBC,EAArB,KAGA,OACI,eAACpB,GAAD,UACI,gBAACO,GAAD,WACI,eAACF,GAAD,CAAoBgB,IAAI,iDAAiDC,MAAQ,UACjF,gBAACnB,GAAD,CAAqBoB,SApBZ,SAACpC,GAClBA,EAAEqC,iBACF5C,EAASF,EAAwB3B,EAAO4B,KAkBhC,UACI,eAAC6B,GAAD,gCAGA,gBAAC,IAAD,CAAOiB,QAAS,EAAhB,UACI,gBAAC,IAAD,CAAYC,MAAS,CAACC,MAAO,SAA7B,UACI,eAAC,IAAD,CACIC,cAAc,OACdC,SAAU,eAAC,KAAD,CAASF,MAAM,eAE7B,eAAC,IAAD,CAAOjF,KAAK,QAAQoF,YAAY,wBAAqBjF,KAAK,QAAQkD,MAAOhD,EAAOgF,SAAUlC,OAG9F,gBAAC,IAAD,WACI,eAAC,IAAD,CACI+B,cAAc,OACdC,SAAU,eAAC,KAAD,CAAOF,MAAM,aACvBD,MAAS,CAACC,MAAO,WAErB,eAAC,IAAD,CAAOjF,KAAMyE,EAAe,OAAS,WAAYtE,KAAK,WAAWkD,MAAOpB,EAAUmD,YAAY,gBAAaC,SAAUlC,EAAmB6B,MAAS,CAACC,MAAO,WACzJ,eAAC,IAAD,CAAmBL,MAAM,SAAzB,SACI,eAAC,KAAD,CAAQU,EAAE,UAAUC,KAAK,KAAKC,QA3BlC,kBAAMd,GAAiBD,IA2BnB,SACKA,EAAe,UAAY,oBAM5C,eAACT,GAAD,UACI,kDAGR,gBAACC,GAAD,CAAee,MAAS,CAACJ,MAAO,OAAWY,QA/C7B,WACtBtD,GF1EG,SAACA,GACJlB,IAASnB,OAAO4F,gBAAgBhE,GAC3BW,KADL,uCACW,6BAAAsD,EAAA,sDAASrD,EAAT,EAASA,KACZH,EACIhD,EAAMmD,EAAKpC,IAAKoC,EAAKjC,YAAaiC,EAAKhC,MAAOgC,EAAKC,WAFpD,2CADX,uDAMKE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,UEgHZ,UACI,eAAC,IAAD,CACIyC,cAAc,OACdC,SAAU,eAAC,KAAD,CAAUF,MAAM,aAC1BD,MAAS,CAACW,WAAY,SAG1B,eAAC,IAAD,CAAOxF,KAAK,QAAQkD,MAAO,uBAAuB6B,cAAgB,OAAOF,MAAS,CAACY,UAAW,SAAUC,WAAY,OAAQZ,MAAO,cAEvI,gBAAChB,GAAD,CAAee,MAAS,CAACJ,MAAO,MAAOkB,OAAQ,QAAUN,QApD9C,WACnBtD,GF/DG,SAACA,GACJlB,IAASnB,OAAO4F,gBAAgB9D,GAC3BS,KADL,uCACW,6BAAAsD,EAAA,sDAASrD,EAAT,EAASA,KACZK,QAAQC,IAAIN,GAEZH,EACIhD,EAAMmD,EAAKpC,IAAKoC,EAAKjC,YAAaiC,EAAKhC,MAAOgC,EAAKC,WAJpD,2CADX,uDAQKE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,UEwGZ,UACI,eAAC,IAAD,CACIyC,cAAc,OACdC,SAAU,eAAC,KAAD,CAAYF,MAAM,aAC5BD,MAAS,CAACW,WAAY,MAAOV,MAAO,WAExC,eAAC,IAAD,CAAO9E,KAAK,QAAQkD,MAAO,yBAAyB6B,cAAgB,OAAOF,MAAS,CAACY,UAAW,SAAUC,WAAY,OAAQZ,MAAO,cAEzI,eAAC,IAAD,CAAMc,GAAG,iBAAiBf,MAAS,CAACgB,eAAgB,OAAQf,MAAO,SAAnE,SACI,sBAAKD,MAAS,CAACc,OAAQ,OAAQD,WAAY,QAA3C,0C,+BChJdvC,GAAsBC,KAAOC,IAAV,6RAWnBC,GAAsBF,KAAOG,KAAV,+DAInBC,GAAqBJ,KAAOK,IAAV,gFAKlBC,GAAwBN,KAAOC,IAAV,+NAWrBM,GAAkBP,KAAOQ,EAAV,2HAOfC,GAA4BT,KAAOC,IAAV,wLAwIhByC,IA9HO1C,aAAOW,IAAPX,CAAH,mKAQF,WAEb,IAAMrB,EAAWmC,cACT3E,EAAa6E,aAAY,SAAAzE,GAAK,OAAIA,EAAMS,SAAxCb,SAER,EAAwCkD,GAAQ,CAC5CzC,KAAM,GACNE,MAAO,GACP4B,SAAU,KAHd,mBAAOqC,EAAP,KAAmBnB,EAAnB,KAKQhD,EAA0BmE,EAA1BnE,KAAME,EAAoBiE,EAApBjE,MAAO4B,EAAaqC,EAAbrC,SAUfiE,EAAY,WAEd,OAA2B,IAAvB/F,EAAKgG,OAAOC,QAMZlE,EAASL,EAAS,MACX,GACCwE,KAAUC,QAAQjG,GAQQ,IAA3B4B,EAASkE,OAAOC,QAMvBlE,EAASL,EAAS,MACX,IAGXK,EJ5GE,CACFlC,KAAMf,EAAMI,iBI4GL,IAbH6C,EAASL,EAAS,MACX,IAef,EAAwCiB,oBAAS,GAAjD,mBAAO2B,EAAP,KAAqBC,EAArB,KAGA,OACI,eAAC,GAAD,UACI,gBAAC,GAAD,WACI,eAAC,GAAD,CAAoBC,IAAI,iDAAiDC,MAAM,UAC/E,gBAAC,GAAD,CAAqBC,SA/CZ,SAACpC,GAClBA,EAAEqC,iBACEoB,KACAhE,EHjCsC,SAAC7B,EAAO4B,EAAU9B,GAChE,OAAO,SAAC+B,GACJlB,IAASnB,OAAO0G,+BAA+BlG,EAAO4B,GACjDG,KADL,uCACW,6BAAAsD,EAAA,6DAASrD,EAAT,EAASA,KAAT,SACGA,EAAKmE,cAAc,CAAEpG,YAAaD,IADrC,OAEH+B,EACIhD,EAAMmD,EAAKpC,IAAKoC,EAAKjC,YAAaiC,EAAKhC,MAAOgC,EAAKC,WAHpD,2CADX,uDAOKE,OAAM,SAAAC,GACHC,QAAQC,IAAIF,OGuBPgE,CAAmCpG,EAAO4B,EAAU9B,KA4CzD,UAEQT,GAEI,gBAAC,KAAD,CAAOgH,OAAO,QAAQC,GAAI,EAA1B,UACI,eAAC,KAAD,IACCjH,KAIb,eAAC,GAAD,0BAGA,gBAAC,IAAD,CAAOqF,QAAS,EAAhB,UACI,gBAAC,IAAD,WACI,eAAC,IAAD,CACIG,cAAc,OACdC,SAAU,eAAC,KAAD,CAAcF,MAAM,eAElC,eAAC,IAAD,CAAOjF,KAAK,OAAOoF,YAAY,oBAAoBjF,KAAK,OAAOkD,MAAOlD,EAAMkF,SAAUlC,OAE1F,gBAAC,IAAD,WACI,eAAC,IAAD,CACI+B,cAAc,OACdC,SAAU,eAAC,KAAD,CAASF,MAAM,eAE7B,eAAC,IAAD,CAAOjF,KAAK,QAAQoF,YAAY,wBAAqBjF,KAAK,QAAQkD,MAAOhD,EAAOgF,SAAUlC,OAG9F,gBAAC,IAAD,WACI,eAAC,IAAD,CACI+B,cAAc,OACdC,SAAU,eAAC,KAAD,CAAOF,MAAM,eAE3B,eAAC,IAAD,CAAOjF,KAAMyE,EAAe,OAAS,WAAYtE,KAAK,WAAWkD,MAAOpB,EAAUmD,YAAY,gBAAaC,SAAUlC,IACrH,sBAAK6B,MAAO,CAAEC,MAAO,sBAArB,SACI,eAAC,IAAD,CAAmBL,MAAM,SAAzB,SACI,eAAC,KAAD,CAAQU,EAAE,UAAUC,KAAK,KAAKC,QA3CtC,kBAAMd,GAAiBD,IA2Cf,SACKA,EAAe,UAAY,sBAOhD,eAAC,GAAD,UACI,yBAAQzE,KAAK,SAAb,yBAGR,eAAC,IAAD,CAAM+F,GAAG,SAASf,MAAO,CAAEgB,eAAgB,QAA3C,SACI,sBAAKhB,MAAO,CAAEc,OAAQ,OAAQD,WAAY,QAA1C,0CCzKLe,GARA,WACX,OACI,+BACI,kE,wCCONC,GAAwBtD,aAAOuD,KAAPvD,CAAH,wIAOrBwD,GAAqBxD,aAAOyD,KAAPzD,CAAH,4EAMlB0D,GAAoB1D,KAAO2D,MAAV,6FAyERC,GApEA,WAGX,IAAMjF,EAAWmC,cAWjB,GATaE,aAAY,SAAAzE,GAAK,OAAIA,EAAMD,QASHiD,oBAAS,IAA9C,mBAAOsE,EAAP,KAAmBC,EAAnB,KAaA,OAXAC,qBAAU,WACNtG,IAASnB,OAAO0H,mBAAhB,uCAAmC,WAAOlF,GAAP,SAAAqD,EAAA,uDAC/B,OAAIrD,QAAJ,IAAIA,OAAJ,EAAIA,EAAMpC,KAENoH,GAAe,GAEfA,GAAe,GALY,2CAAnC,yDASD,CAACnF,IAEA,iCACI,eAACsF,GAAA,EAAD,CAAWC,OAAK,EAAhB,SACI,gBAACZ,GAAD,WACI,eAACG,GAAA,EAAD,CAAKU,GAAI,EAAT,SACI,sBAAK/C,IAAI,iDAAiDC,MAAM,QAAQ+C,OAAO,WAEnF,eAACZ,GAAD,CAAoBW,GAAI,EAAG1C,MAAO,CAAEC,MAAO,WAA3C,SACI,oBAAGD,MAAO,CAAEgB,eAAgB,aAA5B,qBAEJ,eAACe,GAAD,CAAoBW,GAAI,EAAxB,SACI,oDAEJ,eAACX,GAAD,CAAoBW,GAAI,EAAxB,SACI,mDAEJ,eAACX,GAAD,CAAoBW,GAAI,EAAxB,SACI,eAACT,GAAD,CAAmBjH,KAAK,SAASoF,YAAY,cAEjD,eAAC4B,GAAA,EAAD,CAAKU,GAAI,EAAT,SACI,eAAC,KAAD,CAAQnC,KAAK,MAAMpF,KAAK,eAAewE,IAAI,6BAA6BK,MAAS,CAACJ,MAAO,OAAQ+C,OAAQ,iBAIrH,mDAEIP,GAAc,eAAC,GAAD,IAIbA,EAKG,sBAAK5B,QArDA,WACjBtD,ELyCJ,uCAAO,WAAOA,GAAP,SAAAwD,EAAA,sEACG1E,IAASnB,OAAO+H,UADnB,OAEH1F,EAAS/C,KAFN,2CAAP,wDKWgB,mBALU,eAAC,IAAD,CAAM4G,GAAG,cAAT,SACV,gDC3EL8B,GATF,WACT,OACI,iCACI,eAAC,GAAD,IACA,6D,4CCFCC,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,mBAEF,OACI,eAAC,IAAD,2BAAYA,GAAZ,IACID,UAAY,SAACE,GAAD,OACNJ,EACM,eAACC,EAAD,eAAgBG,IAChB,eAAC,IAAD,CAAUpC,GAAG,qB,mCCXxBqC,GAAc,SAAC,GAIrB,IAHHL,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,mBAEF,OACI,eAAC,IAAD,2BAAYA,GAAZ,IACID,UAAY,SAACE,GAAD,OACNJ,EACM,eAAC,IAAD,CAAUhC,GAAG,UACb,eAACiC,EAAD,eAAgBG,SCZ3BE,GAAa,WACtB,OACI,eAAC,IAAD,UACI,gBAAC,IAAD,WACI,eAAC,IAAD,CACIC,OAAK,EACLC,KAAK,cACLN,UAAW9D,KAEf,eAAC,IAAD,CACImE,OAAK,EACLC,KAAK,iBACLN,UAAWhC,KAEf,eAAC,IAAD,CAAUF,GAAG,sBCiDdyC,OA/Cf,WAEE,IAAMtG,EAAWmC,cAEjB,EAAgCvB,oBAAS,GAAzC,mBAAiB2F,GAAjB,WACA,EAAoC3F,oBAAS,GAA7C,mBAAO4F,EAAP,KAAmBC,EAAnB,KAyBA,OAvBArB,qBAAU,WAERtG,IAASnB,OAAO0H,mBAAhB,uCAAmC,WAAOlF,GAAP,SAAAqD,EAAA,uDAGjC,OAAIrD,QAAJ,IAAIA,OAAJ,EAAIA,EAAMpC,MACRiC,EAAShD,EAAMmD,EAAKpC,IAAKoC,EAAKjC,YAAaiC,EAAKhC,MAAOgC,EAAKC,WAE5DI,QAAQC,IAAIN,GAEZsG,GAAc,IAGdA,GAAc,GAIhBF,GAAY,GAfqB,2CAAnC,yDAmBC,CAACvG,EAAUuG,EAAaE,IAGzB,eAAC,IAAD,UACE,eAAC,IAAD,UACE,gBAAC,IAAD,WACE,eAAC,IAAD,CAAOL,OAAK,EAACC,KAAO,QAAQN,UAAaJ,KACzC,eAAC,GAAD,CAAaU,KAAO,QAAQN,UAAaI,GAAYN,gBAAiBW,IACtE,eAAC,GAAD,CAAcH,KAAO,UAAUN,UAAarB,GAAQmB,gBAAiBW,IAGrE,eAAC,IAAD,CAAW3C,GAAK,kB,OCrD1B6C,IAASC,OACP,eAAC,IAAD,CAAUjI,MAASA,EAAnB,SACE,eAAC,GAAD,MAEFkI,SAASC,eAAe,W","file":"static/js/main.843f402f.chunk.js","sourcesContent":["export const types = {\r\n    login: 'Login',\r\n    logout: 'Logout',\r\n    \r\n    uiSetError: 'Set Error,',\r\n    uiRemoveError: 'Remove Error',\r\n    // uiStarLoading: 'start loading',\r\n    // uiFinishLoading: 'finish loading',\r\n\r\n    uiStartLoading: 'UI start loading',\r\n    uiFinishLoading: 'UI finish loading',\r\n}","import { types } from '../types/types'\r\n\r\nconst inicialState = {\r\n    loading: false,\r\n    msjError: null\r\n}\r\n\r\nexport const registro = (state = inicialState, action) => {\r\n    switch (action.type) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msjError: action.payload\r\n            }\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msjError: null\r\n            }\r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {createStore, combineReducers, applyMiddleware, compose} from 'redux'\r\nimport { authReducer } from '../reducers/authReducer'\r\nimport {registro} from '../reducers/uiReducer'\r\n// import {registro} from '../reducers/uiReducer'\r\nimport thunk from 'redux-thunk'\r\n// import {userReducer} from '../reducers/userReducer'\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    error: registro\r\n})\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nexport const store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)\r\n","// Se importa types\r\nimport { types } from '../types/types'\r\n\r\n// Se implementa el reducer para autenticar el usuario \r\nexport const authReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName,\r\n                email: action.payload.email,\r\n                image: action.payload.image,\r\n            }\r\n        case types.logout:\r\n            return { }\r\n        // case types.addUser:\r\n        //     return {\r\n        //         ...state, \r\n        //         profile: [action.payload, ...state.profile]\r\n        //     }\r\n        // case types.updateUser:\r\n        //     return {\r\n        //         ...state,\r\n        //         profile: state.profile.map(p => p.id === action.payload.id\r\n        //             ? action.payload.p\r\n        //             :\r\n        //             p\r\n        //             )\r\n        //     }\r\n        default:\r\n        return state;\r\n    }\r\n}","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDc19Qda8T3qdq7nRSSSep04QQ6POK7JXQ\",\r\n    authDomain: \"block-master-7f1c3.firebaseapp.com\",\r\n    projectId: \"block-master-7f1c3\",\r\n    storageBucket: \"block-master-7f1c3.appspot.com\",\r\n    messagingSenderId: \"67844887054\",\r\n    appId: \"1:67844887054:web:ae5bca9d39e0f192b2a25f\"\r\n  };\r\n  \r\n  firebase.initializeApp(firebaseConfig);\r\n  \r\n  const db = firebase.firestore();\r\n  \r\n  const googleAuthProvider = new firebase.auth.GoogleAuthProvider();\r\n  const facebookAuthProvider = new firebase.auth.FacebookAuthProvider();\r\n  \r\n  export {\r\n    db,\r\n    googleAuthProvider,\r\n    facebookAuthProvider,\r\n    firebase\r\n  }","import {types} from '../types/types'\r\n\r\nexport const setError = (err) => {\r\n    return{\r\n        type: types.uiSetError,\r\n        payload: err\r\n    }\r\n}\r\n\r\nexport const removeError = () => {\r\n    return{\r\n        type: types.uiRemoveError,\r\n    }\r\n}\r\n\r\nexport const starLoading = () => ({\r\n    type: types.uiStarLoading\r\n})\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","import { types } from '../types/types'\r\nimport { googleAuthProvider, firebase, facebookAuthProvider, db } from '../firebase/firebase-config'\r\nimport { starLoading, finishLoading } from './uiError'\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithEmailAndPassword(email, password)\r\n            .then(({ user }) => {\r\n                dispatch(login(user.uid, user.displayName, user.email, user.photoURL))\r\n                dispatch(finishLoading())\r\n                dispatch(starLoading())\r\n            })\r\n            .catch(e => {\r\n                dispatch(finishLoading())\r\n                console.log(e);\r\n            })\r\n    }\r\n}\r\n\r\nexport const startGoogleLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(googleAuthProvider)\r\n            .then( async ({ user }) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName, user.email, user.photoURL),\r\n                )\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            }\r\n            )\r\n    }\r\n}\r\n\r\nexport const startFacebookLogin = () => {\r\n    return (dispatch) => {\r\n        firebase.auth().signInWithPopup(facebookAuthProvider)\r\n            .then( async ({ user }) => {\r\n                console.log(user);\r\n\r\n                dispatch(\r\n                    login(user.uid, user.displayName, user.email, user.photoURL)\r\n                )\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            }\r\n            )\r\n    }\r\n}\r\n\r\n\r\nexport const startRegisterWithEmailPasswordName = (email, password, name) => {\r\n    return (dispatch) => {\r\n        firebase.auth().createUserWithEmailAndPassword(email, password)\r\n            .then( async ({ user }) => {\r\n                await user.updateProfile({ displayName: name })\r\n                dispatch(\r\n                    login(user.uid, user.displayName, user.email, user.photoURL)\r\n                )\r\n            })\r\n            .catch(e => {\r\n                console.log(e);\r\n            }\r\n            )\r\n\r\n    }\r\n}\r\nexport const login = (uid, displayName, email, image) => {\r\n    return {\r\n        type: types.login,\r\n        payload: {\r\n            uid,\r\n            displayName,\r\n            email,\r\n            image,\r\n        }\r\n    }\r\n}\r\n\r\nexport const starLogout = () => {\r\n    return async (dispatch) => {\r\n        await firebase.auth().signOut();\r\n        dispatch(logout());\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})\r\n\r\nexport const userData = (usuario, email) => {\r\n    return {\r\n        type: userData,\r\n        payload: {\r\n            usuario,\r\n            email\r\n        }\r\n    }\r\n}\r\n\r\nexport const newProfile = (uid, user) => {\r\n    return {\r\n        type: types.addUser,\r\n        payload: {\r\n            uid,\r\n            ...user\r\n        }\r\n    }\r\n}","import { useState } from 'react';\r\n\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n    \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React, { useState } from 'react'\r\nimport { Input, Stack, InputGroup, InputLeftElement, InputRightElement, Button } from \"@chakra-ui/react\"\r\nimport { FaUser } from 'react-icons/fa'\r\nimport { GoKey } from 'react-icons/go'\r\nimport { MdEmail } from 'react-icons/md'\r\nimport { login, startLoginEmailPassword, startGoogleLogin, startFacebookLogin } from '../actions/auth'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm } from '../hooks/useForm'\r\nimport { Link } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { FcGoogle } from 'react-icons/fc';\r\nimport {FaFacebook} from 'react-icons/fa'\r\n\r\n// Estilos\r\nconst StyledMainContainer = styled.div`\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    background-image: url(\"https://i.ibb.co/D91DzpB/dolby.jpg\");\r\n    background-repeat: no-repeat;\r\n\tbackground-size: 100% 100%;\r\n`\r\n\r\nconst StyledFormContainer = styled.form`\r\n    padding: 70px 20px 20px 20px;\r\n`\r\n\r\nconst StyledImgContainer = styled.img`\r\n    position: absolute;\r\n    margin-bottom: 460px;\r\n`\r\n\r\nconst StyledSecondContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    background: #282623;\r\n    color: black !important;\r\n    border-radius: 15px;\r\n    border: none;\r\n`\r\n\r\nconst StyledMainTitle = styled.p`\r\n    text-align: center;\r\n    padding: 20px 0px;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n    color: white;\r\n`\r\n\r\nconst StyledButtonMainContainer = styled.div`\r\n    text-align: center;\r\n    width: 100%;\r\n    background: #0e3fa9;\r\n    color: white;\r\n    margin-top: 20px;\r\n    padding: 7px;\r\n    border-radius: 10px;\r\n`\r\n\r\nconst StyledButtons = styled(InputGroup)`\r\n    width: 85% !important;\r\n    box-shadow: 0px 4px 8px rgb(89 73 30 / 16%) !important;\r\n    font-weight: bold;\r\n    font-size: 15px;\r\n`\r\n\r\nconst StyledButtonEnvio = styled.button`\r\n &&hover {\r\n    background-color: #eea10f;\r\n }\r\n`\r\n\r\nconst Login = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const [formValues, handleInputChange] = useForm({\r\n        email: '',\r\n        password: ''\r\n    })\r\n    const { email, password } = formValues;\r\n\r\n    // Aca hay que cambiar ui por error \r\n    const loading = useSelector(state => state.ui)\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        dispatch(startLoginEmailPassword(email, password))\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch(startGoogleLogin())\r\n    }\r\n\r\n    const handleFacebook = () => {\r\n        dispatch(startFacebookLogin())\r\n    }\r\n\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const handleShowClick = () => setShowPassword(!showPassword)\r\n\r\n    return (\r\n        <StyledMainContainer>\r\n            <StyledSecondContainer>\r\n                <StyledImgContainer src='https://i.ibb.co/2jHtsTf/logo-block-master.png' width = '200px'/>\r\n                <StyledFormContainer onSubmit={handleSubmit}>\r\n                    <StyledMainTitle>\r\n                        Iniciar Sesión\r\n                    </StyledMainTitle>\r\n                    <Stack spacing={4}>\r\n                        <InputGroup style = {{color: 'white'}}>\r\n                            <InputLeftElement\r\n                                pointerEvents=\"none\"\r\n                                children={<MdEmail color=\"gray.300\" />}\r\n                            />\r\n                            <Input type=\"email\" placeholder=\"Correo Electrónico\" name='email' value={email} onChange={handleInputChange} />\r\n                        </InputGroup>\r\n\r\n                        <InputGroup >\r\n                            <InputLeftElement\r\n                                pointerEvents=\"none\"\r\n                                children={<GoKey color=\"gray.300\" />}\r\n                                style = {{color: 'white'}}\r\n                            />\r\n                            <Input type={showPassword ? 'text' : 'password'} name='password' value={password} placeholder=\"Contraseña\" onChange={handleInputChange} style = {{color: 'white'}}/>\r\n                            <InputRightElement width='5.0rem'>\r\n                                <Button h='1.75rem' size='sm' onClick={handleShowClick}>\r\n                                    {showPassword ? 'Ocultar' : 'Mostrar'}\r\n                                </Button>\r\n                            </InputRightElement>\r\n                        </InputGroup>\r\n\r\n                    </Stack>\r\n                    <StyledButtonMainContainer>\r\n                        <button>Enviar</button>\r\n                    </StyledButtonMainContainer>\r\n                </StyledFormContainer>\r\n                <StyledButtons style = {{width: '80%', }}  onClick={handleGoogleLogin}>\r\n                    <InputLeftElement\r\n                        pointerEvents=\"none\"\r\n                        children={<FcGoogle color=\"gray.300\" />}\r\n                        style = {{marginLeft: '8px'}}\r\n\r\n                    />\r\n                    <Input name='email' value= 'Continuar con Google' pointerEvents = 'none' style = {{textAlign: 'center', fontWeight: 'bold', color: 'white'}}/>\r\n                </StyledButtons>\r\n                <StyledButtons style = {{width: '80%', margin: '10px'}}  onClick={handleFacebook}>\r\n                    <InputLeftElement\r\n                        pointerEvents=\"none\"\r\n                        children={<FaFacebook color=\"gray.300\" />}\r\n                        style = {{marginLeft: '8px', color: 'white'}}\r\n                    />\r\n                    <Input name='email' value= 'Continuar con Facebook' pointerEvents = 'none' style = {{textAlign: 'center', fontWeight: 'bold', color: 'white'}}/>\r\n                </StyledButtons>\r\n                <Link to='/auth/registro' style = {{textDecoration: 'none', color: 'white'}}>\r\n                    <div style = {{margin: '15px', fontWeight: 'bold'}}>No tengo una cuenta</div>\r\n                </Link>\r\n            </StyledSecondContainer>\r\n        </StyledMainContainer>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState } from 'react'\r\nimport { startRegisterWithEmailPasswordName } from '../actions/auth'\r\nimport validator from 'validator'\r\nimport { setError, removeError } from '../actions/uiError'\r\nimport { useForm } from '../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Input, Stack, InputGroup, InputLeftElement, Alert, AlertIcon, InputRightElement, Button } from \"@chakra-ui/react\"\r\nimport { Link } from 'react-router-dom'\r\nimport { FaUser } from 'react-icons/fa'\r\nimport { GoKey } from 'react-icons/go'\r\nimport { MdEmail } from 'react-icons/md'\r\nimport styled from 'styled-components'\r\nimport { FaUserCircle } from 'react-icons/fa'\r\n\r\nconst StyledMainContainer = styled.div`\r\n    height: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    background-image: url(\"https://i.ibb.co/D91DzpB/dolby.jpg\");\r\n    background-repeat: no-repeat;\r\n\tbackground-size: 100% 100%;\r\n`\r\n\r\nconst StyledFormContainer = styled.form`\r\n    padding: 70px 20px 20px 20px;\r\n`\r\n\r\nconst StyledImgContainer = styled.img`\r\n    position: absolute;\r\n    margin-bottom: 460px;\r\n`\r\n\r\nconst StyledSecondContainer = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    background: #282623;\r\n    color: white;\r\n    border-radius: 15px;\r\n    border: none;\r\n`\r\n\r\nconst StyledMainTitle = styled.p`\r\n    text-align: center;\r\n    padding: 20px 0px;\r\n    font-size: 20px;\r\n    font-weight: bold;\r\n`\r\n\r\nconst StyledButtonMainContainer = styled.div`\r\n    text-align: center;\r\n    width: 100%;\r\n    background: #0e3fa9;\r\n    color: white;\r\n    margin-top: 20px;\r\n    padding: 7px;\r\n    border-radius: 10px;\r\n`\r\n\r\nconst StyledButtons = styled(InputGroup)`\r\n    width: 85% !important;\r\n    box-shadow: 0px 4px 8px rgb(89 73 30 / 16%) !important;\r\n    font-weight: bold;\r\n    font-size: 15px;\r\n`\r\n\r\n\r\nconst Registro = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msjError } = useSelector(state => state.error);\r\n\r\n    const [formValues, handleInputChange] = useForm({\r\n        name: '',\r\n        email: '',\r\n        password: '',\r\n    })\r\n    const { name, email, password } = formValues;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (formValid()) {\r\n            dispatch(startRegisterWithEmailPasswordName(email, password, name))\r\n        }\r\n    }\r\n\r\n\r\n    const formValid = () => {\r\n\r\n        if (name.trim().length === 0) {\r\n            // Swal.fire({\r\n            //     icon: 'error',\r\n            //     title: 'Error',\r\n            //     text: 'Rellena todos los campos',\r\n            // })\r\n            dispatch(setError(''))\r\n            return false\r\n        } else if (!validator.isEmail(email)) {\r\n            // Swal.fire({\r\n            //     icon: 'error',\r\n            //     title: 'Error',\r\n            //     text: 'Se requiere un email',\r\n            // })\r\n            dispatch(setError(''))\r\n            return false\r\n        } else if (password.trim().length === 0) {\r\n            // Swal.fire({\r\n            //     icon: 'error',\r\n            //     title: 'Error',\r\n            //     text: 'Ingresa una contraseña',\r\n            // })\r\n            dispatch(setError(''))\r\n            return false\r\n        }\r\n\r\n        dispatch(removeError())\r\n        return true\r\n    }\r\n\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const handleShowClick = () => setShowPassword(!showPassword)\r\n\r\n    return (\r\n        <StyledMainContainer>\r\n            <StyledSecondContainer>\r\n                <StyledImgContainer src='https://i.ibb.co/2jHtsTf/logo-block-master.png' width='200px' />\r\n                <StyledFormContainer onSubmit={handleSubmit}>\r\n                    {\r\n                        msjError &&\r\n                        (\r\n                            <Alert status='error' mt={5}>\r\n                                <AlertIcon />\r\n                                {msjError}\r\n                            </Alert>\r\n                        )\r\n                    }\r\n                    <StyledMainTitle>\r\n                        Registrarme\r\n                    </StyledMainTitle>\r\n                    <Stack spacing={4}>\r\n                        <InputGroup>\r\n                            <InputLeftElement\r\n                                pointerEvents=\"none\"\r\n                                children={<FaUserCircle color=\"gray.300\" />}\r\n                            />\r\n                            <Input type=\"text\" placeholder=\"Nombre de Usuario\" name='name' value={name} onChange={handleInputChange} />\r\n                        </InputGroup>\r\n                        <InputGroup>\r\n                            <InputLeftElement\r\n                                pointerEvents=\"none\"\r\n                                children={<MdEmail color=\"gray.300\" />}\r\n                            />\r\n                            <Input type=\"email\" placeholder=\"Correo Electrónico\" name='email' value={email} onChange={handleInputChange} />\r\n                        </InputGroup>\r\n\r\n                        <InputGroup >\r\n                            <InputLeftElement\r\n                                pointerEvents=\"none\"\r\n                                children={<GoKey color=\"gray.300\" />}\r\n                            />\r\n                            <Input type={showPassword ? 'text' : 'password'} name='password' value={password} placeholder=\"Contraseña\" onChange={handleInputChange} />\r\n                            <div style={{ color: '#000000 !important' }}>\r\n                                <InputRightElement width='5.0rem' >\r\n                                    <Button h='1.75rem' size='sm' onClick={handleShowClick} >\r\n                                        {showPassword ? 'Ocultar' : 'Mostrar'}\r\n                                    </Button>\r\n                                </InputRightElement>\r\n                            </div>\r\n                        </InputGroup>\r\n\r\n                    </Stack>\r\n                    <StyledButtonMainContainer>\r\n                        <button type='submit'>Enviar</button>\r\n                    </StyledButtonMainContainer>\r\n                </StyledFormContainer>\r\n                <Link to='/login' style={{ textDecoration: 'none' }}>\r\n                    <div style={{ margin: '15px', fontWeight: 'bold' }}>\r\n                        Ya tengo una cuenta\r\n                    </div>\r\n                </Link>\r\n            </StyledSecondContainer>\r\n        </StyledMainContainer>\r\n    )\r\n}\r\n\r\nexport default Registro\r\n","import React from 'react'\r\n\r\nconst Perfil = () => {\r\n    return (\r\n        <div>\r\n            <p>Aca ira el Perfil del usuario</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Perfil\r\n","import React, { useEffect, useState } from \"react\";\r\nimport firebase from 'firebase'\r\nimport styled from 'styled-components'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { starLogout } from '../actions/auth'\r\nimport { Link } from 'react-router-dom'\r\nimport Perfil from '../containers/Perfil.jsx'\r\nimport { Row, Col, Container } from 'react-bootstrap'\r\nimport { Avatar, AvatarBadge, AvatarGroup } from \"@chakra-ui/react\"\r\n\r\n// Estilos \r\n\r\nconst StyledNavbarContainer = styled(Row)`\r\n    /* margin: 24px 83px; */\r\n    padding: 24px 83px;\r\n    background-color: #0F0E17;\r\n    color: #ffffff;\r\n`\r\n\r\nconst StyledColContainer = styled(Col)`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n`\r\n\r\nconst StyledInputSearch = styled.input`\r\n    width: 100%; \r\n    padding: 10px; \r\n    border-radius: 8px;\r\n`\r\nconst Header = () => {\r\n\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    // console.log(auth.email);\r\n\r\n    const handleLogout = () => {\r\n        dispatch(starLogout())\r\n    }\r\n\r\n\r\n    const [isLoogedIn, setsIsLoogedIn] = useState(false)\r\n\r\n    useEffect(() => {\r\n        firebase.auth().onAuthStateChanged(async (user) => {\r\n            if (user?.uid) {\r\n                // dispatch(login(user.uid, user.displayName))\r\n                setsIsLoogedIn(true)\r\n            } else {\r\n                setsIsLoogedIn(false)\r\n            }\r\n        })\r\n\r\n    }, [dispatch])\r\n    return (\r\n        <div>\r\n            <Container fluid>\r\n                <StyledNavbarContainer>\r\n                    <Col xs={2}>\r\n                        <img src='https://i.ibb.co/2jHtsTf/logo-block-master.png' width='106px' height='64px' />\r\n                    </Col>\r\n                    <StyledColContainer xs={2} style={{ color: '#FED941' }}>\r\n                        <a style={{ textDecoration: 'underline' }}>Todas</a>\r\n                    </StyledColContainer>\r\n                    <StyledColContainer xs={2}>\r\n                        <p>Más valoradas</p>\r\n                    </StyledColContainer>\r\n                    <StyledColContainer xs={2}>\r\n                        <p>Menos Valoradas</p>\r\n                    </StyledColContainer>\r\n                    <StyledColContainer xs={3}>\r\n                        <StyledInputSearch type='search' placeholder='buscar ' />\r\n                    </StyledColContainer>\r\n                    <Col xs={1}>\r\n                        <Avatar size=\"2xs\" name=\"Dan Abrahmov\" src=\"https://bit.ly/dan-abramov\" style = {{width: '50px', height: '50px'}}/>\r\n                    </Col>\r\n                </StyledNavbarContainer>\r\n            </Container>\r\n            <h1>Finalizar Sesion</h1>\r\n            {\r\n                isLoogedIn && <Perfil />\r\n            }\r\n\r\n            {\r\n                !isLoogedIn ? <Link to='/auth/login'>\r\n                    <div>\r\n                        Entrar\r\n                    </div>\r\n                </Link> :\r\n                    <div onClick={handleLogout}>Salir</div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from '../components/Header.jsx'\r\n\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <h1>Aca la seccion de Home</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/home\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n        \r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\r\nimport Login from '../containers/Login.jsx'\r\nimport Registro from '../containers/Registro.jsx'\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route\r\n                    exact\r\n                    path=\"/auth/login\"\r\n                    component={Login}\r\n                />\r\n                <Route\r\n                    exact\r\n                    path=\"/auth/registro\"\r\n                    component={Registro}\r\n                />\r\n                <Redirect to=\"/auth/login\" />\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n","import { ChakraProvider } from '@chakra-ui/react';\nimport firebase from 'firebase';\nimport { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login } from './actions/auth'\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect\n} from 'react-router-dom';\nimport Login from './containers/Login.jsx'\nimport Registro from './containers/Registro.jsx'\nimport Home from './containers/Home.jsx'\nimport {PrivateRoute} from './routers/PrivateRoute'\nimport {PublicRoute} from './routers/PublicRoute'\nimport {AuthRouter} from './routers/AuthRouter'\nimport Perfil from './containers/Perfil.jsx'\n\n\n\nfunction App() {\n\n  const dispatch = useDispatch();\n\n  const [checking, setChecking] = useState(true);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  useEffect(() => {\n\n    firebase.auth().onAuthStateChanged(async (user) => {\n\n\n      if (user?.uid) {\n        dispatch(login(user.uid, user.displayName, user.email, user.photoURL));\n\n        console.log(user);\n\n        setIsLoggedIn(true);\n        // dispatch(startLoadingUser(user.uid))\n      } else {\n        setIsLoggedIn(false);\n      }\n\n\n      setChecking(false);\n\n    });\n\n  }, [dispatch, setChecking, setIsLoggedIn])\n\n  return (\n    <ChakraProvider>\n      <Router>\n        <Switch>\n          <Route exact path = '/home' component = {Home}/>\n          <PublicRoute path = '/auth' component = {AuthRouter} isAuthenticated={isLoggedIn}/>\n          <PrivateRoute path = '/perfil' component = {Perfil} isAuthenticated={isLoggedIn}/>\n          {/* <Route exact path = '/login' component = {Login}/>\n          <Route path = '/registro' component = {Registro}/> */}\n          <Redirect  to = '/home'/>\n        </Switch>\n      </Router>\n    </ChakraProvider>\n\n  );\n}\n\nexport default App;\n","import { store } from './store/store';\nimport { Provider } from 'react-redux';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}